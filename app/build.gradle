apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.example.bryan.playingwithopencv"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        create("all")
    }

    sourceSets.main.jni.srcDirs = []

    task ndkBuild(type: Exec, description: "Compile JNI source via NDK") {
        def ndkDir = project.plugins.findPlugin('com.android.application').sdkHandler.getNdkFolder()
        commandLine "$ndkDir/ndk-build",
                "NDK_PROJECT_PATH=build",
                "NDK_LIBS_OUT=src/main/jniLibs",
                "APP_BUILD_SCRIPT=src/main/jni/Android.mk",
                "NDK_APPLICATION_MK=src/main/jni/Application.mk"
    }

    task ndkLibsToJar(type: Zip, dependsOn: "ndkBuild", description: "Create a JAR of the native libs") {
        destinationDir new File(buildDir, "libs")
        baseName "ndk-libs"
        extension "jar"
        from(new File(buildDir, "libs")) {
            include "**/*.so"
        }
        into "lib/"
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkLibsToJar
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile fileTree(dir: new File(buildDir, "libs"), include: "*.jar")
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
}
